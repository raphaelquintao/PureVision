// Drawing mixins

// generic drawing of more complex things



// Entries

@mixin entry($t) {
  //
  // Entries drawing function
  //


  @if $t==normal {
    //color: red;
    //background-color: $entry_bg;
    //border: 1px solid $entry_border;
    //box-shadow: inset 0 2px 4px transparentize($entry_bg, 0.95);
  }

  @if $t==focus {
    //color: red;
    //background-color: $entry_bg;
    //border: 1px solid $selected_bg_color;
    //box-shadow: inset 0 2px 4px transparentize($entry_bg, 0.95);
  }

  @if $t==insensitive {
    //color: $insensitive_fg_color;
    //background-color: mix($entry_bg, $bg_color, 55%);
    //border-color: 1px solid mix($entry_border, $bg_color, 55%);
    //box-shadow: inset 0 2px 4px transparentize(mix($entry_bg, $bg_color, 55%), 0.95);
  }

  @if $t==osd {
    color: $osd_fg_color;
    background-color: $osd_bg_color;
    border: 1px solid transparentize(shade(opacify($osd_bg_color, 1), 1.4), 0.90);
    box-shadow: inset 0 2px 4px transparentize(black, 0.95);
  }

  @if $t==osd-focus {
    //color: $selected_fg_color;
    //background-color: $selected_bg_color;
    //border: 1px solid $selected_bg_color;
    //box-shadow: inset 0 2px 4px transparentize(black, 0.95);
  }

  @if $t==osd-insensitive {
    //color: transparentize($osd_fg_color, 0.45);
    //background-color: transparentize($osd_entry_bg, 0.15);
    //border: 1px solid $osd_entry_border;
    //box-shadow: inset 0 2px 4px transparentize(black, 0.95);
  }
}



// Buttons

@mixin button2($t) {
  //
  // Button drawing function
  //
  //@extend %reset_style;

  //text-shadow: 0 1px transparentize($base_color, 1);

  @if $t==normal {
    //
    // normal button
    //
    color: $fg_color;
    background-color: $button_bg;
    border: 1px solid $button_border;
    box-shadow: inset 0 2px 4px transparentize($button_bg, 0.95);
  } @else if $t==focus {
    //
    // focused button
    //
    color: $fg_color;
    background-color: $button_bg;
    border: 1px solid $selected_bg_color;
    box-shadow: inset 0 2px 4px transparentize($button_bg, 0.95);
  } @else if $t==focus-hover {
    //
    // focused button
    //
    color: $fg_color;
    background-color: $button_bg;
    border: 1px solid $selected_bg_color;
    box-shadow: inset 0 2px 4px transparentize($button_bg, 0.95);
  } @else if $t==hover {

     //hovered button

    color: $fg_color;
    background-color: lighten($button_bg, 5%);
    background-color: shade($button_bg, 1.08);
    border: 1px solid $button_border;
    box-shadow: inset 0 2px 4px transparentize(lighten($button_bg, 5%), 0.95);
  } @else if $t==active {

     //pushed button

    color: $selected_fg_color;
    background-color: $selected_bg_color;
    border: 1px solid $selected_bg_color;
    box-shadow: inset 0 2px 4px $selected_bg_color;
  } @else if $t==insensitive {

     //insensitive button

    color: $insensitive_fg_color;
    border: 1px solid transparentize($button_border, 0.45);
    background-color: transparentize($button_bg, 0.45);
    box-shadow: inset 0 2px 4px transparentize($button_bg, 0.95);
  } @else if $t==osd {

     //normal osd button

    color: $osd_fg_color;
    border: 1px solid $osd_button_border;
    background-color: $osd_button_bg;
  } @else if $t==osd-hover {

     //active osd button

    color: $osd_fg_color;
    border: 1px solid $osd_button_border;
    background-color: opacify(lighten($osd_button_bg, 7%), 0.1);
  } @else if $t==osd-active {

     //active osd button

    color: $selected_fg_color;
    border: 1px solid $selected_bg_color;
    background-color: $selected_bg_color;
  } @else if $t==osd-insensitive {

     //insensitive osd button

    color: $osd_insensitive_fg_color;
    border: 1px solid $osd_button_border;
    background-color: transparentize($osd_button_bg, 0.15);
  }
}


@mixin button($t:normal, $bg:$panel_bg, $fg:$panel_fg) {
  $my_bg: shade($bg, 1.1);
  $my_fg: shade($fg, 1.0);

  color: $my_fg;
  border-radius: 2px;
  border: 1px solid shade($my_bg, 0.4);

  transition-duration: 150ms;
  transition-property: background-color;

  @if $t==normal {
    background-color: $my_bg;

  } @else if $t==focus {
    background-color: shade($my_bg, 1.05);

  } @else if $t==focus-hover {
    background-color: shade($my_bg, 1.05);

  } @else if $t==hover {
    background-color: shade($my_bg, 1.05);

  } @else if $t==active {
    background-color: shade($my_bg, 0.3);
    box-shadow: inset 1px 1px 3px -1px rgba(0, 0, 0, 0.9);

  } @else if $t==insensitive {
    opacity: 0.5;

  }

}

@mixin button-osd($t:normal, $bg:$panel_bg, $fg:$panel_fg) {
  $my_bg: shade($bg, 1.1);
  $my_fg: shade($fg, 1.0);

  color: $my_fg;
  border-radius: 2px;
  border: 1px solid shade($my_bg, 1.1);

  transition-duration: 150ms;
  transition-property: background-color;

  @if $t==normal {
    background-color: $my_bg;
    //border: 1px solid shade($my_bg, 0.4);

  } @else if $t==focus {
    background-color: shade($my_bg, 1.05);
    //border: 1px solid shade($my_bg, 0.4);

  } @else if $t==focus-hover {
    //border: 1px solid shade($my_bg, 0.4);
    background-color: shade($my_bg, 1.05);

  } @else if $t==hover {
    //border: 1px solid shade($my_bg, 0.4);
    background-color: shade($my_bg, 1.05);

  } @else if $t==active {
    //border: 1px solid shade($my_bg, 0.4);
    background-color: shade($my_bg, 0.3);
    //box-shadow: inset 1px 1px 3px -1px rgba(0, 0, 0, 0.9);

  } @else if $t==insensitive {

    opacity: 0.5;

  }

}



@mixin def_border($bg: $panel_bg) {
  $hl_border_color: transparentize(shade(opacify($bg, 1), 1.8), 0.90);
  background-color: $bg;
  border: 0;
  border: 1px solid $hl_border_color;
  border-radius: 2px;
  box-shadow: 0 1px 6px 0px rgba(0, 0, 0, 0.95);
}